==71626== Memcheck, a memory error detector
==71626== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==71626== Using Valgrind-3.21.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==71626== Command: ./cub3d map.cub
==71626== 
==71626== Use of uninitialised value of size 8
==71626==    at 0x10000728A: deep_algo (gabin.c:272)
==71626==    by 0x100003460: main (main.c:57)
==71626== 
==71626== Use of uninitialised value of size 8
==71626==    at 0x100007297: deep_algo (gabin.c:272)
==71626==    by 0x100003460: main (main.c:57)
==71626== 
==71626== Use of uninitialised value of size 8
==71626==    at 0x1000072D0: deep_algo (gabin.c:274)
==71626==    by 0x100003460: main (main.c:57)
==71626== 
==71626== Use of uninitialised value of size 8
==71626==    at 0x1000072DD: deep_algo (gabin.c:274)
==71626==    by 0x100003460: main (main.c:57)
==71626== 
==71626== Invalid read of size 1
==71626==    at 0x1000072DD: deep_algo (gabin.c:274)
==71626==    by 0x100003460: main (main.c:57)
==71626==  Address 0x10f3ce6bf is 1 bytes before a block of size 28 alloc'd
==71626==    at 0x100144545: malloc (in /Users/gcherqui/.brew/Cellar/valgrind/HEAD-6812b46/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==71626==    by 0x100004133: ft_strdup (utils.c:15)
==71626==    by 0x100006B35: ft_strrdup (gabin.c:51)
==71626==    by 0x10000787C: init_deep_algo (gabin2.c:64)
==71626==    by 0x100007240: deep_algo (gabin.c:267)
==71626==    by 0x100003460: main (main.c:57)
==71626== 
==71626== Conditional jump or move depends on uninitialised value(s)
==71626==    at 0x100007316: deep_algo (gabin.c:276)
==71626==    by 0x100003460: main (main.c:57)
==71626== 
==71626== Use of uninitialised value of size 8
==71626==    at 0x10000732D: deep_algo (gabin.c:276)
==71626==    by 0x100003460: main (main.c:57)
==71626== 
==71626== Use of uninitialised value of size 8
==71626==    at 0x100007335: deep_algo (gabin.c:276)
==71626==    by 0x100003460: main (main.c:57)
==71626== 
==71626== Conditional jump or move depends on uninitialised value(s)
==71626==    at 0x10000736B: deep_algo (gabin.c:278)
==71626==    by 0x100003460: main (main.c:57)
==71626== 
==71626== Use of uninitialised value of size 8
==71626==    at 0x1000074F3: vrf_map2 (gabin2.c:18)
==71626==    by 0x1000077B9: vrf_map (gabin2.c:46)
==71626==    by 0x1000073CE: deep_algo (gabin.c:281)
==71626==    by 0x100003460: main (main.c:57)
==71626== 
==71626== Use of uninitialised value of size 8
==71626==    at 0x1000074FE: vrf_map2 (gabin2.c:18)
==71626==    by 0x1000077B9: vrf_map (gabin2.c:46)
==71626==    by 0x1000073CE: deep_algo (gabin.c:281)
==71626==    by 0x100003460: main (main.c:57)
==71626== 
==71626== 
==71626== HEAP SUMMARY:
==71626==     in use at exit: 1,424,639 bytes in 862 blocks
==71626==   total heap usage: 1,731 allocs, 869 frees, 2,703,083 bytes allocated
==71626== 
==71626== LEAK SUMMARY:
==71626==    definitely lost: 6,696 bytes in 66 blocks
==71626==    indirectly lost: 33,042 bytes in 195 blocks
==71626==      possibly lost: 5,936 bytes in 137 blocks
==71626==    still reachable: 19,567 bytes in 207 blocks
==71626==         suppressed: 1,359,398 bytes in 257 blocks
==71626== Rerun with --leak-check=full to see details of leaked memory
==71626== 
==71626== Use --track-origins=yes to see where uninitialised values come from
==71626== For lists of detected and suppressed errors, rerun with: -s
==71626== ERROR SUMMARY: 22 errors from 11 contexts (suppressed: 53 from 4)
